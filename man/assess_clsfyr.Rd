% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clsfyr.R
\name{assess_clsfyr}
\alias{assess_clsfyr}
\title{Measures of classification performance}
\usage{
assess_clsfyr(score, true_cls, measure = "ACC", threshold = seq(0, 1, by =
  0.1))
}
\arguments{
\item{score}{probabilities or scores for the target class 1 ("positive");
scores are assumed to be in \eqn{[0, 1]} and high scores correspond to high
probability.}

\item{true_cls}{vector of indicators for the target class: \code{TRUE} or \code{1} if
true class is the target class, \code{FALSE} or \code{0} else.}

\item{measure}{a character vector of performance measures to be calculated,
see \emph{Details}.}

\item{threshold}{threshold for prediction, see \code{\link[=predict.jdify]{predict.jdify()}}.}
}
\value{
A data.frame where each column corresponds to one value of
\code{threshold}. The corresponding values can be found with \code{attr(result, "threshold")}.
}
\description{
Calculates performance measures for a calssifier Assumes there are two
classes, and the first of \code{level(true_cl)} is to be predicted (the
"positive").
}
\details{
Valid options for \code{measure} are
\itemize{
\item{\code{"TP"}: }{number of true positives,}
\item{\code{"FP"}: }{number of false positive,}
\item{\code{"TN"}: }{number of true negatives,}
\item{\code{"FN"}: }{number of false negatives,}
\item{\code{"TPR"}, \code{"sensitivity"}, \code{"recall"}: }{true positive rate (\eqn{TP / P}),}
\item{\code{"FPR"}, \code{"fall-out"}: }{false positive rate (\eqn{FP / N}),}
\item{\code{"TNR"}, \code{"specificity"}: }{true negative rate (\eqn{TN / N}),}
\item{\code{"FNR"}: }{false negative rate (\eqn{FN / P}),}
\item{\code{"PRC"}, \code{"PPV"}: }{precision/positive predictive value (\eqn{TP / (TP + FP)},}
\item{\code{"NPV"}: }{negative predictive value (\eqn{TN / (TN + FN)}),}
\item{\code{"FDR"}: }{false discovery rate (\eqn{FP / (TP + FP)}),}
\item{\code{"ACC"}, \code{"accuracy"}: }{accuracy (\eqn{(TP + TN) / (P + N)}),}
\item{\code{"F1"}: }{F1 score (\eqn{2 * TP / (2 * TP + FP + FN)}),}
\item{\code{"MCC"}: }{Matthews correlation coefficient
\deqn{\frac{(TP * TN - FP * FN)}{[(TP + FP) * (TP + FN) * (TN + FP) *
 (TN + FN)]^(-1/2)},}}
\item{\code{"informedness"}: }{informedness (\eqn{TP / P + TN / N - 1}),}
\item{\code{"markedness"}: }{markedness (\eqn{TP / (TP + FP) + TN / (TN + FN) - 1}),}
}
where \code{P} and \code{N} are the number of positives and negatives, respectively.
}
\examples{
# simulate training and test data
dat <- data.frame(
    cl = as.factor(rbinom(10, 1, 0.5)),
    x1 = rnorm(10),
    x2 = rbinom(10, 1, 0.3)
)

model <- jdify(cl ~ x1 + x2, data = dat)      # joint density fit
probs <- predict(model, dat, what = "probs")  # conditional probabilities

# calculate performance measures
assess_clsfyr(probs[, 1], dat[, 1] == 0, measure = c("ACC", "F1"))

}
